//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ParallelExecution
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MaintenanceSolutionEntities : DbContext
    {
        public MaintenanceSolutionEntities()
            : base("name=MaintenanceSolutionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ParallelExecutionConfiguration> ParallelExecutionConfigurations { get; set; }
    
        public virtual int usp_CreateParallelExecution(Nullable<int> status, Nullable<int> maxDegreeOfParallelism, string partitionStatement, string partitionCommand, ObjectParameter sessionId)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var maxDegreeOfParallelismParameter = maxDegreeOfParallelism.HasValue ?
                new ObjectParameter("MaxDegreeOfParallelism", maxDegreeOfParallelism) :
                new ObjectParameter("MaxDegreeOfParallelism", typeof(int));
    
            var partitionStatementParameter = partitionStatement != null ?
                new ObjectParameter("PartitionStatement", partitionStatement) :
                new ObjectParameter("PartitionStatement", typeof(string));
    
            var partitionCommandParameter = partitionCommand != null ?
                new ObjectParameter("PartitionCommand", partitionCommand) :
                new ObjectParameter("PartitionCommand", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CreateParallelExecution", statusParameter, maxDegreeOfParallelismParameter, partitionStatementParameter, partitionCommandParameter, sessionId);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> usp_PullNextParallelExecution()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("usp_PullNextParallelExecution");
        }
    }
}
